import React, { lazy, Suspense } from 'react';
import PropTypes from "prop-types";
import { Canvas } from '@react-three/fiber';
import { Loader, useGLTF, OrbitControls, PerspectiveCamera, Stars } from '@react-three/drei';
import layout from "./../Layout/index.module.scss";
import styles from "./index.module.scss";


const ModelComponent = lazy(() => import("./model"));
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: overlaps (https://sketchfab.com/overlaps)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/91964c1ce1a34c3985b6257441efa500
title: Space exploration [WLP series #8]
*/
function Model({ url }) {
  const { nodes, scene } = useGLTF(url);

  //console.log(nodes);
  return (
    <group rotation={[-Math.PI / 2, 0, 0]} position={[0, -7, 0]} scale={7}>
      <group rotation={[Math.PI / 13.5, -Math.PI / 5.8, Math.PI / 5.6]}>
        <mesh receiveShadow castShadow geometry={nodes.planet002.geometry} material={nodes.planet002.material} />
        <mesh geometry={nodes.planet003.geometry} material={nodes.planet003.material} />
      </group>
    </group>
  )
}

const Space = ({ ...props }) => {
  return (
    <>
      <div className={styles.bg} />
   
      <Canvas dpr={[1.5, 2]} linear shadows onCreated={state => state.gl.setClearColor(0x000000, 0)}>
       
        
        
        <PerspectiveCamera makeDefault position={[10, 20, 16]} fov={45}>
          <pointLight intensity={1} position={[-10, -25, -10]} />
          <spotLight castShadow intensity={4.25} angle={1.2} penumbra={1} position={[-25, 20, -15]} shadow-mapSize={[1024, 1024]} shadow-bias={-0.0001} />
        </PerspectiveCamera>
        <Suspense fallback={null}>
          <ModelComponent />
        </Suspense>
        <OrbitControls autoRotate enablePan={false} enableZoom={false} maxPolarAngle={Math.PI / 2} minPolarAngle={Math.PI / 2} />
        <Stars radius={500} depth={50} count={1000} factor={10} />
      </Canvas>
      <div className={styles.layer} />
      <Loader />
     
    </>
  )
}

Space.propTypes = {
};

Space.defaultProps = {
	// nothing
};

export default Space;
